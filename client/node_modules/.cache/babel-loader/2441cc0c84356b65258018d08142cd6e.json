{"remainingRequest":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/babel-loader/lib/index.js!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/src/components/barChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/src/components/barChart.vue","mtime":1586230548000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvenpoL05vZGVqc1Byb2plY3RzL2Nvcm9uYXZpcnVzX05vZGVqcy9jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgSGlnaGNoYXJ0cyBmcm9tICJoaWdoY2hhcnRzIjsKaW1wb3J0IERhdGFSZXNvdXJjZSBmcm9tICcuLi9jb25uZWN0RkInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImJhckNoYXJ0IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZmlybWVkQ2FzZXM6IFByb21pc2UsCiAgICAgIGN1cnJlbnRTdGF0dXM6IFByb21pc2UsCiAgICAgIGRhdGFBcnI6IFt7CiAgICAgICAgbmFtZTogIue7tOWkmuWIqeS6muW3niIsCiAgICAgICAgeTogNQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuaWsOWNl+WogeWwlOWjq+W3niIsCiAgICAgICAgeTogMTAyOQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuWhlOaWr+mprOWwvOS6miIsCiAgICAgICAgeTogMzQKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLmmIblo6vlhbDlt54iLAogICAgICAgIHk6IDQ0MwogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuWNl+a+s+Wkp+WIqeS6miIsCiAgICAgICAgeTogMTk3CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi6KW/5r6z5aSn5Yip5Lqa5beeIiwKICAgICAgICB5OiAyMDUKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLljJfpooblnLAiLAogICAgICAgIHk6IDUKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLpppbpg73lnLDljLoiLAogICAgICAgIHk6IDQ0CiAgICAgIH1dCiAgICB9OwogIH0sCiAgcHJvcHM6IFsiIl0sCiAgbWV0aG9kczogewogICAgdXBkYXRlQ2hhcnQ6IGZ1bmN0aW9uIHVwZGF0ZUNoYXJ0KCkge30sCiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICAvLyBIaWdoY2hhcnRzLmNoYXJ0KCJjb250YWluZXIiLCB7CiAgICAgIHZhciBjaGFydCA9IEhpZ2hjaGFydHMuY2hhcnQoImNvbnRhaW5lciIsIHsKICAgICAgICBjaGFydDogewogICAgICAgICAgdHlwZTogImNvbHVtbiIsCiAgICAgICAgICBpbnZlcnRlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICJDb25maXJtdGVkIGNhc2VzIG9mIGVhY2ggc3RhdGUiCiAgICAgICAgfSwKICAgICAgICBzdWJ0aXRsZTogewogICAgICAgICAgdGV4dDogInVwZGF0ZSBvbmNlIGFuIGhvdXIiCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogImNhdGVnb3J5IgogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICJudW1iZXIgb2YgY29uZmlybWVkIGNhc2VzIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgcGxvdE9wdGlvbnM6IHsKICAgICAgICAgIHNlcmllczogewogICAgICAgICAgICBib3JkZXJXaWR0aDogMCwKICAgICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgZm9ybWF0OiAie3BvaW50Lnl9IgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBoZWFkZXJGb3JtYXQ6ICc8c3BhbiBzdHlsZT0iZm9udC1zaXplOjExcHgiPntzZXJpZXMubmFtZX08L3NwYW4+PGJyPicsCiAgICAgICAgICBwb2ludEZvcm1hdDogJzxzcGFuIHN0eWxlPSJjb2xvcjp7cG9pbnQuY29sb3J9Ij57cG9pbnQubmFtZX08L3NwYW4+OiA8Yj57cG9pbnQueX08L2I+PGJyLz4nCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAiY29uZmlybWVkIGNhc2VzIiwKICAgICAgICAgIGNvbG9yQnlQb2ludDogdHJ1ZSwKICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgfV0KICAgICAgfSk7CiAgICAgIGNoYXJ0LnNlcmllc1swXS5zZXREYXRhKHRoaXMuZGF0YUFycik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy51cGRhdGVDaGFydCgpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGk7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gRGF0YVJlc291cmNlLmdldEN1cnJlbnRTdGF0dXMoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfdGhpcy5jdXJyZW50U3RhdHVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmRhdGFBcnIpCiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5kYXRhQXJyWzBdLnkpICAg5oiQ5YqfCiAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuZGF0YUFycik7IC8vIGNvbnNvbGUubG9nKHRoaXMuY29uZmlybWVkQ2FzZXMuZGF0YSkKICAgICAgICAgICAgICAvLyAgY29uc29sZS5sb2codGhpcy5jb25maXJtZWRDYXNlcy5kYXRhWzBdLnN0YXRlX25hbWUpOwogICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyh0aGlzLmNvbmZpcm1lZENhc2VzLmRhdGFbMF0uY29uZmlybWVkX2Nhc2VzKTsKCiAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuY3VycmVudFN0YXR1cy5kYXRhWzBdLmxvY2F0aW9uKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5jdXJyZW50U3RhdHVzLmRhdGFbMF0uY29uZmlybWVkX2Nhc2VzKTsgLy8gY29uc29sZS5sb2codGhpcy5jdXJyZW50U3RhdHVzLmRhdGEubGVuZ3RoKTsKICAgICAgICAgICAgICAvLyAgZm9yKGxldCBpID0wO2k8ODtpKyspewogICAgICAgICAgICAgIC8vICAgIHRoaXMuZGF0YUFycltpXS5uYW1lID0gdGhpcy5jb25maXJtZWRDYXNlcy5kYXRhW2ldLnN0YXRlX25hbWU7CiAgICAgICAgICAgICAgLy8gICAgdGhpcy5kYXRhQXJyW2ldLnkgPSB0aGlzLmNvbmZpcm1lZENhc2VzLmRhdGFbaV0uY29uZmlybWVkX2Nhc2VzOwogICAgICAgICAgICAgIC8vICB9CgogICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBfdGhpcy5jdXJyZW50U3RhdHVzLmRhdGEubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhQXJyW2ldLm5hbWUgPSBfdGhpcy5jdXJyZW50U3RhdHVzLmRhdGFbaV0ubG9jYXRpb247CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhQXJyW2ldLnkgPSBwYXJzZUludChfdGhpcy5jdXJyZW50U3RhdHVzLmRhdGFbaV0uY29uZmlybWVkX2Nhc2VzKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF90aGlzLmluaXQoKTsKCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBfdGhpcy5lcnJvciA9IF9jb250ZXh0LnQwLm1lc3NhZ2U7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDExXV0pOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["barChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div id=\"container\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\n    \n  </div>\n</template>\n\n<script>\nimport Highcharts from \"highcharts\";\nimport DataResource from '../connectFB';\n\nexport default {\n  name: \"barChart\",\n  data() {\n    return {\n       confirmedCases:Promise,\n       currentStatus:Promise,\n       dataArr:[{\n                name: \"维多利亚州\",\n                y: 5\n              },\n              {\n                name: \"新南威尔士州\",\n                y: 1029\n              },\n              {\n                name: \"塔斯马尼亚\",\n                y: 34\n              },\n              {\n                name: \"昆士兰州\",\n                y: 443\n              },\n              {\n                name: \"南澳大利亚\",\n                y: 197\n              },\n              {\n                name: \"西澳大利亚州\",\n                y: 205\n              },\n              {\n                name: \"北领地\",\n                y: 5\n              },\n              {\n                name: \"首都地区\",\n                y: 44\n              }]\n    };\n  },\n  props: [\"\"],\n  methods: {\n    updateChart() {},\n    init() {\n      // Highcharts.chart(\"container\", {\n       let chart = Highcharts.chart(\"container\", {\n        chart: {\n          type: \"column\",\n          inverted: true,\n        },\n        title: {\n          text: `Confirmted cases of each state`\n        },\n        subtitle: {\n          text: \"update once an hour\"\n        },\n        xAxis: {\n          type: \"category\"\n        },\n        yAxis: {\n          title: {\n            text: \"number of confirmed cases\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        plotOptions: {\n          series: {\n            borderWidth: 0,\n            dataLabels: {\n              enabled: true,\n              format: \"{point.y}\"\n            }\n          }\n        },\n        tooltip: {\n          headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n          pointFormat:\n            '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y}</b><br/>'\n        },\n        series: [\n          {\n            name: \"confirmed cases\",\n            colorByPoint: true,\n            data: [\n              \n            ]\n          }\n        ]\n      });\n      chart.series[0].setData(this.dataArr)\n    }\n  },\n  mounted: function() {\n    this.updateChart();\n    \n  }, \n  async created(){\n      try{\n        //1.获取后台数据\n       // this.confirmedCases = await DataResource.getConfirmedCases();\n        this.currentStatus = await DataResource.getCurrentStatus();\n        // console.log(this.dataArr)\n        // console.log(this.dataArr[0].y)   成功\n\n         console.log(this.dataArr)\n        // console.log(this.confirmedCases.data)\n        //  console.log(this.confirmedCases.data[0].state_name);\n        //  console.log(this.confirmedCases.data[0].confirmed_cases);\n         console.log(this.currentStatus.data[0].location);\n         console.log(this.currentStatus.data[0].confirmed_cases);\n       // console.log(this.currentStatus.data.length);\n\n        //  for(let i =0;i<8;i++){\n        //    this.dataArr[i].name = this.confirmedCases.data[i].state_name;\n        //    this.dataArr[i].y = this.confirmedCases.data[i].confirmed_cases;\n\n        //  }\n         for(let i =0;i<this.currentStatus.data.length-1;i++){\n           this.dataArr[i].name = this.currentStatus.data[i].location;\n           this.dataArr[i].y = parseInt( this.currentStatus.data[i].confirmed_cases);\n\n         }\n\n        this.init();\n      }catch(error){\n        this.error  = error.message;\n      }\n    }\n};\n</script>\n\n<style scoped>\ninput[type=\"color\"]::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n#colorPicker {\n  border: 0;\n  padding: 0;\n  margin: 0;\n  width: 30px;\n  height: 30px;\n}\n.numberInput {\n  width: 30px;\n}\n</style>"],"sourceRoot":"src/components"}]}