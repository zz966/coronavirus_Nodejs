{"remainingRequest":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/babel-loader/lib/index.js!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/src/components/HelloWorld.vue","mtime":1585183986000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzh/NodejsProjects/coronavirus_Nodejs/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy96emgvTm9kZWpzUHJvamVjdHMvY29yb25hdmlydXNfTm9kZWpzL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3p6aC9Ob2RlanNQcm9qZWN0cy9jb3JvbmF2aXJ1c19Ob2RlanMvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvc3RTZXJ2aWNlIGZyb20gJy4uL2Nvbm5lY3RGQic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RzOiBQcm9taXNlLAogICAgICBlcnJvcjogJycsCiAgICAgIHRleHQ6ICcnCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBQb3N0U2VydmljZS5nZXRQb3N0cygpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF90aGlzLnBvc3RzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY3JlYXRlZCcpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90eXBlb2YoX3RoaXMucG9zdHMpKTsgLy8gY29uc29sZS5sb2coSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSAodGhpcy5wb3N0cykpKQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBfdGhpcy5lcnJvciA9IF9jb250ZXh0LnQwLm1lc3NhZ2U7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDhdXSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,WAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,OADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,WAAA,CAAA,QAAA,EAFA;;AAAA;AAEA,cAAA,KAAA,CAAA,KAFA;AAGA,cAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,cAAA,OAAA,CAAA,GAAA,SAAA,KAAA,CAAA,KAAA,GAJA,CAKA;;AALA;AAAA;;AAAA;AAAA;AAAA;AAOA,cAAA,KAAA,CAAA,KAAA,GAAA,YAAA,OAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"hello\">\n    <!-- <h1>{{ posts.data }}</h1> -->\n      <h2>Confirmed cases of Covid-19 in Australia</h2>\n       <h5>3-25</h5>\n    <table align=\"center\">\n      <thead>\n        <tr>\n          <th v-for=\"(item,index) in posts.data\" v-bind:key=\"index\">{{item.state_name}}</th>\n \n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n       \n          <td\n            v-for=\"(item,index) in posts.data\"\n            v-bind:key=\"index\"\n          >{{item.confirmed_cases}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport PostService from '../connectFB'\n\nexport default {\n  name: 'HelloWorld',\n  data(){\n    return{\n      posts:Promise,\n      error:'',\n      text:''\n    }\n  },\n    async created(){\n      try{\n        this.posts = await PostService.getPosts();\n        console.log('created')\n        console.log(typeof this.posts)\n       // console.log(JSON.parse(JSON.stringify (this.posts)))\n      }catch(error){\n        this.error  = error.message;\n      }\n    }\n  \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\ntable {\n  border: 1px solid #e9e9e9;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nth,\ntd {\n  padding: 8px 16px;\n  border: 1px solid #e9e9e9;\n  text-align: left;\n}\n\nth {\n  background-color: #f7f7f7;\n  color: #5c6b77;\n  font-weight: 600;\n}\n\ncaption {\n  display: table-caption;\n  text-align: center;\n}\nh2,\nh5,h6{\n  \n  text-align: center;\n}\nh2{\n  padding-top: 15px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}